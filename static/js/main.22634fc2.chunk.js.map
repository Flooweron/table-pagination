{"version":3,"sources":["Loader/Loader.js","Table/Table.js","ModeSelector/ModeSelector.js","TableSearch/TableSearch.js","App.js","index.js"],"names":["className","props","onClick","onSort","bind","sortField","sort","data","map","item","id","firstName","lastName","style","display","justifyContent","padding","onSelect","useState","value","setValue","onSearch","type","onChange","event","target","App","state","isModeSelected","isLoading","search","row","currentPage","cloneData","concat","_","orderBy","setState","modeSelectHandler","url","fetchData","onRowSelect","pageChangeHandler","selected","searchHandler","a","fetch","response","json","this","result","filter","toLowerCase","includes","length","ModeSelector","filteredData","getFilteredData","pageCount","Math","ceil","displayData","chunk","Fragment","TableSearch","Table","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22634fc2.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.css';\n\nexport default () => <div className=\"lds-dual-ring\" />","import React from 'react';\n\nexport default props => (\n    <table className=\"table\">\n        <thead>\n            <tr>\n                <th onClick={props.onSort.bind(null, 'id')}>\n                    ID {props.sortField === 'id' ? <small>{props.sort}</small> : null}\n                </th>\n                <th onClick={props.onSort.bind(null, 'firstName')}>\n                    First Name {props.sortField === 'firstName' ? <small>{props.sort}</small> : null}\n                </th>\n                <th onClick={props.onSort.bind(null, 'lastName')}>\n                    Last Name {props.sortField === 'lastName' ? <small>{props.sort}</small> : null}\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            { props.data.map(item =>(\n                <tr>\n                    <td>{item.id}</td>\n                    <td>{item.firstName}</td>\n                    <td>{item.lastName}</td>\n                </tr>\n            ))}\n        </tbody>\n    </table>\n)","import React from 'react';\n\nexport default props =>{\n    const bigUrl = `http://www.filltext.com/?rows=250&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`;\n    return (\n        <div style={{display:'flex', justifyContent:'center', padding: '50px 0'}}>\n            <button onClick={()=>props.onSelect(bigUrl)} className=\"btn btn-danger\">250 элементов</button>\n        </div>\n    )\n}","import React, {useState} from 'react'\n\nexport default props => {\n    const [value, setValue] = useState('')\n    const valueChangeHandler = event => {\n        setValue(event.target.value)\n      }\n\n    return (\n      <>\n        <div className=\"input-group mb-3 mt-3\">\n          <div className=\"input-group-prepend\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={() => props.onSearch(value)}\n            >\n              Search\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={valueChangeHandler}\n            value={value}\n          />\n        </div>\n\n        <p className=\"text-center\">\n          Найдите нужного человека!\n        </p>\n        <p className=\"text-center\">Вы можете сортировать список</p>\n      </>\n    );\n}\n","import React, { Component } from 'react';\nimport ReactPaginate from 'react-paginate';\nimport Loader from './Loader/Loader';\nimport Table from './Table/Table';\nimport ModeSelector from './ModeSelector/ModeSelector';\nimport TableSearch from './TableSearch/TableSearch';\nimport _ from 'lodash';\n\n\nclass App extends Component {\n  state ={\n    isModeSelected: false,\n    isLoading: false,\n    data: [],\n    search: '',\n    sort: 'asc',  // 'desc'\n    sortField: 'id',\n    row: null,\n    currentPage: 0,\n  }\n  async fetchData(url) {\n    const response = await fetch(url)\n    const data = await response.json()\n   \n    this.setState({\n      isLoading: false,\n      data: _.orderBy(data, this.state.sortField, this.state.sort)\n    })\n\n  }\n  onSort = sortField => {\n    const cloneData = this.state.data.concat();\n    const sort = this.state.sort === 'asc' ? 'desc' : 'asc';\n    const data = _.orderBy(cloneData, sortField, sort);\n    this.setState({ data, sort, sortField })\n  }\n\n  modeSelectHandler = url => {\n    // console.log(url)\n    this.setState({\n      isModeSelected: true,\n      isLoading: true,\n    })\n    this.fetchData(url)\n  }\n\n  \n  onRowSelect = row => (\n    this.setState({row})\n  )\n\n  pageChangeHandler = ({selected}) => (\n    this.setState({currentPage: selected})\n  )\n\n  searchHandler = search => {\n    this.setState({search, currentPage: 0})\n  }\n\n  getFilteredData(){\n    const {data, search} = this.state\n\n    if (!search) {\n      return data\n    }\n   var result = data.filter(item => {\n     return (\n       item[\"firstName\"].toLowerCase().includes(search.toLowerCase()) ||\n       item[\"lastName\"].toLowerCase().includes(search.toLowerCase()) ||\n       item[\"email\"].toLowerCase().includes(search.toLowerCase())\n     );\n   });\n   if(!result.length){\n     result = this.state.data\n   }\n    return result\n  }\n\n  render() {\n    const pageSize = 50;\n    if(!this.state.isModeSelected){\n      return (\n        <div className=\"container\">\n          <ModeSelector onSelect={this.modeSelectHandler}/>\n        </div>\n      )\n    }\n   \n    const filteredData = this.getFilteredData();\n    // debugger\n    const pageCount = Math.ceil(filteredData.length / pageSize)\n    const displayData = _.chunk(filteredData, pageSize)[this.state.currentPage]\n    return (\n      <div className=\"container\">\n      {\n        this.state.isLoading \n        ? <Loader />\n        : <React.Fragment>\n            <TableSearch onSearch={this.searchHandler}/>\n            <Table \n              data={displayData}\n              onSort={this.onSort}\n              sort={this.state.sort}\n              sortField={this.state.sortField}\n              onRowSelect={this.onRowSelect}\n            />\n          </React.Fragment>\n\n      }\n\n      {\n        this.state.data.length > pageSize\n        ? <ReactPaginate\n        previousLabel={'<'}\n        nextLabel={'>'}\n        breakLabel={'...'}\n        breakClassName={'break-me'}\n        pageCount={pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={this.pageChangeHandler}\n        containerClassName={'pagination'}\n        activeClassName={'active'}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        nextClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextLinkClassName=\"page-link\"\n        forcePage={this.state.currentPage}\n      /> : null\n      }\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}